<?php

namespace UserBundle\Repository;

use AppBundle\Traits\QueryAssistant;
use Doctrine\ORM\EntityRepository;
use UserBundle\Entity\User;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends EntityRepository
{
    use QueryAssistant;

    public function getAll()
    {
        return $this->findAll();
    }

    public function create($data)
    {
        $this->_em->persist($data);
        $this->_em->flush();
    }

    public function delete($data)
    {
        $this->_em->remove($data);
        $this->_em->flush();
    }

    public function update($data)
    {
        $this->_em->persist($data);
        $this->_em->flush();
        return $this->_em;
    }

    public function users()
    {
        $query = $this->createQueryBuilder('u');
        $query->where('u.userType = :User OR u.userType = :Agent');
        $query->setParameter('User', 'User');
        $query->setParameter('Agent', 'Agent');

        return $query->getQuery()->getResult();
    }

    public function getUserList($data, User $user)
    {
        $office = $user->getOffice();
        $params = $this->queryParameters($data);

        $qb = $this->createQueryBuilder('u');
        $qb->join('u.profile', 'p');
        $qb->join('u.groups', 'g');
        $qb->leftJoin('u.office', 'o');
        $qb->select('u, p, g');
        if (!empty($params['orderField'])) {
            $qb->orderBy($params['orderField'], $params['order']);
        } else {
            $qb->orderBy('p.fullNameEn', 'asc');
        }
        $qb = $this->filterQuery($qb, $params['arrFilterField']);

        if (in_array($office->getType(), array('DC', 'AC_LAND'))) {
            $qb->andWhere("u.office = :office")->setParameter("office", $office);
        }

        if ($office->getType() == 'MINISTRY') {
            $qb->andWhere("g.name = :name")->setParameter("name", 'ডিসি অ্যাডমিন');
            $qb->andWhere("o.type IN (:type)")->setParameter("type", array('MINISTRY', 'DC'));
            $qb->orWhere('u.officeAdmin = :officeAdmin')->setParameter('officeAdmin', 1);
        }

        return $qb->getQuery()->getResult();
    }
    public function getUdcUserList($data, User $user, $udcOffices)
    {

        $params = $this->queryParameters($data);

        $qb = $this->createQueryBuilder('u');
        $qb->join('u.profile', 'p');
        $qb->join('u.groups', 'g');
        $qb->leftJoin('u.office', 'o');
        $qb->select('u, p, g');
        if (!empty($params['orderField'])) {
            $qb->orderBy($params['orderField'], $params['order']);
        } else {
            $qb->orderBy('p.fullNameEn', 'asc');
        }
        $qb = $this->filterQuery($qb, $params['arrFilterField']);
        $qb = $this->singleSearchQuery($qb, $params['arrSingleSearchField']);

        $qb->andWhere("u.office IN(:offices)")->setParameter("offices", $udcOffices);

        return $qb->getQuery()->getResult();
    }
    public function getUserType($user){
        $qb = $this->createQueryBuilder('user');
        $qb->join('user.groups', 'g');
        $qb->select('g.name');
        $qb->where('user.id = :id');
        $qb->setParameter('id',$user->getId());
        return $qb->getQuery()->getSingleResult();
    }
}
