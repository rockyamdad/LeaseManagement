<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Office;
use AppBundle\Entity\OfficeSettings;
use Doctrine\ORM\EntityRepository;

/**
 * OfficeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class OfficeRepository extends EntityRepository
{
    public function getDeliveryFee(Office $office)
    {
        $output = array(
            'deliveryFee' => 0,
            'otherDistrictDeliveryFee' =>0,
            'udcDeliveryFee' => 5,
            'udcApplicationReceiveFee' => 0,
            'udcDeliveryDay' => 0,
            'applicationLimitPerDay' => 0,
            'applicationReceiveMedia' => array(),
        );



        $ministryOffice = $this->_em->getRepository('AppBundle:Office')->findOneBy(array('type' => 'MINISTRY'));

        $row = $this->_em->getRepository('AppBundle:OfficeSettings')->findOneBy(array('office' => $ministryOffice));

        if ($row) {
            $output = array(
                'deliveryFee' => $row->getPostFeeInDistrict(),
                'otherDistrictDeliveryFee' => $row->getPostFeeOutDistrict(),
                'udcDeliveryFee' => $row->getUiscDeliveryFee(),
                'udcApplicationReceiveFee' => $row->getUiscApplicationReceiveFee(),
                'udcDeliveryDay' => $row->getUiscDeliveryDay(),
                'applicationLimitPerDay' => $row->getApplicationLimitADay(),
                'applicationReceiveMedia' => $row->getApplicationReceiveMedia(),
            );
        }


        $row = $this->_em->getRepository('AppBundle:OfficeSettings')->findOneBy(array('office' => $office));

        if ($row) {
            $output = array(
                'deliveryFee' => $row->getPostFeeInDistrict(),
                'otherDistrictDeliveryFee' => $row->getPostFeeOutDistrict(),
                'udcDeliveryFee' => $row->getUiscDeliveryFee(),
                'udcApplicationReceiveFee' => $row->getUiscApplicationReceiveFee(),
                'udcDeliveryDay' => $row->getUiscDeliveryDay(),
                'applicationLimitPerDay' => $row->getApplicationLimitADay(),
                'applicationReceiveMedia' => $row->getApplicationReceiveMedia(),
            );
        }

        return $output;
    }

    public function getChileOfficeIds(Office $office, $includeOwn = true)
    {
        $qb = $this->createQueryBuilder('o');
        $qb->select('o.id');
        $qb->where('o.parent = :office')->setParameter('office', $office);
        $childOffices = $qb->getQuery()->getResult();

        $output = array();
        if ($includeOwn) {
            $output[] = $office->getId();
        }

        foreach ($childOffices as $row) {
            $output[] = $row['id'];
        }

        return $output;
    }
    public function getTotalUdc($district){

        $qb = $this->createQueryBuilder('o');
        $qb->select('count(o.id) AS total');
        $qb->where('o.district = :district');
        $qb->andWhere('o.type = :type');
        $qb->andWhere('o.active = 1');
        $qb->setParameter('district', $district);
        $qb->setParameter('type', 'UDC');

        return $qb->getQuery()->getResult();

    }
    public function getTotalUdcForUpozila($upozila){

        $qb = $this->createQueryBuilder('o');
        $qb->select('count(o.id) AS total');
        $qb->where('o.upozila = :upozila');
        $qb->andWhere('o.type = :type');
        $qb->andWhere('o.active = 1');
        $qb->setParameter('upozila', $upozila);
        $qb->setParameter('type', 'UDC');

        return $qb->getQuery()->getResult();

    }

    public function getTotalUdcForUnion($union){

        $qb = $this->createQueryBuilder('o');
        $qb->select('count(o.id) AS total');
        $qb->where('o.union = :union');
        $qb->andWhere('o.type = :type');
        $qb->setParameter('union', $union);
        $qb->setParameter('type', 'UDC');

        return $qb->getQuery()->getResult();

    }
}
